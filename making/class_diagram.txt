@startuml Game
    /' Class Game '/
    class PlayerModel {
        +ctx: CanvasRenderingContext2D
        +image: Image
        +size: Object
        +health: int
        +velocity: int
        +maxHealth: int
        +position: Object
        +playerDirection: int
        +chest: Armor
        +legs: Armor
        +foot: Armor
    }

    class MapModel {
        +ctx: CanvasRenderingContext2D
        +srcImage: string
        +spritesheet: Image
        +maxTileX: int
        +maxTileY: int
        +map: Array
        +mapCollision: Array
        +mapGenerator: Generator
    }

    class Generator {
        +maxTileX: int
        +maxTileY: int
        +BLANK_TILE : const
        +WALL_TILE : const
        +map: Array
        +mapCollision: Array
    }

    class GameController {
        +map : Map
        +ctx: CanvasRenderingContext2D
        +players: Array<Player>
        +input: InputController
        +playerView : Player
    }

    class InputController {
        +player: Player
        +map: Map
    }

    Abstract class ArmorModel {
        +armor: int
    }

    class ChestArmorModel {}
    class LegsArmorModel {}
    class FootArmorModel {}

    Abstract class Armor { 
        +spriteSheet : Image 
    }

    class ChestArmor {}
    class LegsArmor {}
    class FootArmor {}

    class Player {
        +spriteSheet : HTMLImageElement
        +context : CanvasRenderingContext2D
    }

    Abstract class Weapon {
        +spritesheet: Image
        +damage: int
    }
    
    class DragonspearWeapon {}
    
    ArmorModel <|-- ChestArmorModel
    ArmorModel <|-- LegsArmorModel
    ArmorModel <|-- FootArmorModel

    Armor <|-- ChestArmor
    Armor <|-- LegsArmor
    Armor <|-- FootArmor

    Weapon <|-- DragonspearWeapon

    PlayerModel *-- Weapon
    PlayerModel o-- MapModel
    PlayerModel "1" *-- "3" ArmorModel
    MapModel o-- Generator


    GameController *-- PlayerModel
    GameController *-- MapModel
    Player "3" *-- "1" Armor
    GameController *-- Player

    /' class Observer '/
    class Observer {
        +observers : Array
    }

    class DropItemObserver {}
    class EnterCombatObserver {}
    class PlayerDeadObserver {}
    class RoundObserver {}
    class ReceiveDamageObserver {}

    Observer <|-- DropItemObserver
    Observer <|-- EnterCombatObserver
    Observer <|-- PlayerDeadObserver
    Observer <|-- RoundObserver
    Observer <|-- ReceiveDamageObserver

    GameController "1" *-- "many" Observer
    PlayerModel o-- Observer
    Player o-- Observer
    
    /' Application stores '/
    class GameStore {
        +instance: static
        state: Object
    }

    GameController *-- GameStore
    InputController o-- GameStore

@enduml