@startuml Game
    /' Class Game '/
    class PlayerModel {
        +spriteSheet: Image
        +size: Object
        +health: int
        +velocity: int
        +maxHealth: int
        +position: Object
        +playerDirection: int
        +chestArmorModel: Armor
        +legsArmorModel: Armor
        +footArmorModel: Armor
    }

    class MapModel {
        +spriteSheet: Image
        +maxTileX: int
        +maxTileY: int
        +map: Array
        +mapCollision: Array
        +mapGenerator: Generator
    }

    class Generator {
        +maxTileX: int
        +maxTileY: int
        +BLANK_TILE : const
        +WALL_TILE : const
        +map: Array
        +mapCollision: Array
    }

    class GameController {
        +gameView: GameView
        +gameModel: gameModel
        +mapView: MapView
        +dropItemObserver: Observer
        +roundObserver: Observer
        +receiveDamageObserver: Observer
    }

    class ArmorModel {
        +armor: int
        +spritesheet: Image
    }

     class GameView {
        +context: CanvasRenderingContext2D
    }

    class PlayerView {}

    class MapView {
        +spriteSheet: Image
    }

    class WeaponModel {
        +damage: int
        +spritesheet: Image
    }
        
    PlayerModel o-- WeaponModel
    PlayerModel o-- MapModel
    PlayerModel "1" *-- "3" ArmorModel
    MapModel o-- Generator

    GameController *-- PlayerModel
    GameController *-- MapModel
    GameController o-- MapView
    GameController o-- PlayerView
    GameController *-- GameView

    /' class Observer '/
    class Observer {
        +observers : Array
    }

    GameController "1" *-- "many" Observer
    MapView o-- Observer
    PlayerModel o-- Observer
    PlayerView o-- Observer
    MapModel o-- Observer
    
    /' Application stores '/
    class GameModel {
        +map : Map
        +players: Array<Player>
        +playerSelected: int
        +isStarted: boolean
        +isFight : boolean
    }  

    GameController *-- GameModel
    GameModel <|-- Observer

    class HUDController {
        +hudView: HUDView
        +hudModel: HUDModel
        +gameModel: GameModel
    }

    class HUDModel {}

    class HUDView {
        +HUDContainer: HTMLDivElement
        +HUDContainerPlayerOne: HTMLDivElement
        +HUDContainerPlayerTwo: HTMLDivElement
        +HUDPlayerOneName: HTMLParagraphElement
        +HUDPlayerTwoName: HTMLParagraphElement
        +HUDPlayerOneProgressElement: HTMLProgressElement
    }


    class MenuController {
        +menuModel: MenuModel
        +menuView: MenuView
    }

    class MenuModel {
        +gameModel: GameModel

    }
    
    class MenuView {
        +buttonElement: HTMLButtonElement
    }

    class GameOverController {
        +gameOverModel: GameOverModel
        +gameOverView: GameOverView
    }

    class GameOverModel {
        +hidden: boolean
    }

    class GameOverView {
        +HUDContainer: HTMLElement
    }

    HUDController *-- HUDView
    HUDController *-- HUDModel
    HUDController ..> GameModel
    MenuController ..> GameModel
    MenuController *-- MenuView
    MenuController *-- MenuModel

    GameOverController ..> GameOverModel
    GameOverController ..> GameOverView
@enduml