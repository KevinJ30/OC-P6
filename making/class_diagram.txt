@startuml Game
    /' Class Game '/
    class PlayerModel {
        +spriteSheet: Image
        +size: Object
        +health: int
        +velocity: int
        +maxHealth: int
        +position: Object
        +playerDirection: int
        +chestArmorModel: Armor
        +legsArmorModel: Armor
        +footArmorModel: Armor
    }

    class MapModel {
        +spriteSheet: Image
        +maxTileX: int
        +maxTileY: int
        +map: Array
        +mapCollision: Array
        +mapGenerator: Generator
    }

    class Generator {
        +maxTileX: int
        +maxTileY: int
        +BLANK_TILE : const
        +WALL_TILE : const
        +map: Array
        +mapCollision: Array
    }

    class GameController {
        +map : Map
        +ctx: CanvasRenderingContext2D
        +players: Array<Player>
        +input: InputController
        +playerView : Player
        +roundObserver : Observer
        +dropItemObserver : Observer
        +receiveDamageObserver : Observer
    }

    class InputController {
        +player: Player
        +map: Map
    }

    class ArmorModel {
        +armor: int
        +spritesheet: Image
    }

    class PlayerView {}

    class MapView {}

    class WeaponModel {
        +damage: int
        +spritesheet: Image
    }

    class GameView {
        +context: CanvasRenderingContext2D
    }
        
    PlayerModel o-- WeaponModel
    PlayerModel o-- MapModel
    PlayerModel "1" *-- "3" ArmorModel
    MapModel o-- Generator

    GameController *-- PlayerModel
    GameController *-- MapModel
    GameView <|-- MapView
    GameView <|-- PlayerView
    GameController *-- GameView

    /' class Observer '/
    class Observer {
        +observers : Array
    }

    GameController "1" *-- "many" Observer
    MapView o-- Observer
    PlayerModel o-- Observer
    PlayerView o-- Observer
    MapModel o-- Observer
    
    /' Application stores '/
    class GameStore {
        +instance: static
        state: Object
    }

    GameController o-- GameStore
    InputController ..> GameStore 
    HUDController o-- GameStore
    GameStore <|-- Observer

    class HUDController {
        +viewHUD: HUDView
    }

    class HUDModel {
        +gameStore : GameStore
    }

    class HUDView {}

    HUDController *-- HUDView
    HUDController *-- HUDModel

@enduml